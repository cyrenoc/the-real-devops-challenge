pipeline {

    agent {
      any {}  
    }

    environment {
	PASS = credentials('registry-pass')
    }

    stages {

        stage('Build') {
            steps {
		     //sh "echo hola build"
                     //sh "pip install tox"
                     //sh "/usr/bin/python -m pip install --upgrade pip"
                     //sh "pip install -r requirements.txt"
                     //sh "whoami"
                     // sh "./insertUser.sh"
		      sh 'docker build -t "docker-in-jenkins-build:latest"  /var/jenkins_home/workspace/the-real-devops-challenge/dockerBuild'
                      sh "docker stop docker-build"
                      sh "docker run -d -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker -p 8085:8085 --name docker-build  -i docker-in-jenkins-build:latest"
                      sh "docker exec -t docker-build  mongoimport --uri 'mongodb://appAdmin:secret@localhost:27017/myNewDatabase'   -c restaurant --file  /tmp/restaurant.json"
                    }
		}
        stage('Test') {
            steps {
		      //sh './jenkins/test/test.sh mvn test' 
                   sh "echo hola test"
                   sh "docker run  -v /home/ubuntu/jenkins/the-real-devops-challenge:/tmp/app -w /tmp/app --rm painless/tox /bin/bash tox"
                  }
		}
		
        stage('Deploy') {
            steps {
       		   //sh './jenkins/deploy/deploy.sh'
                   sh "echo hola deploy"
                   sh "./start.sh &"
   
            }
         }
    }
}


pipeline {

    agent {
      any {}  
    }

    environment {
	PASS = credentials('registry-pass')
    }

    stages {

        stage('Build') {
            steps { 
                      sh 'echo prepare DB'
		      sh 'docker build -t "docker-in-jenkins-build:latest"  /var/jenkins_home/workspace/the-real-devops-challenge/dockerBuild'
                      sh "docker stop docker-build && docker rm docker-build"
                      sh "docker run -d --network jenkins_net -v /var/run/docker.sock:/var/run/docker.sock -v /usr/bin/docker:/usr/bin/docker -p 8085:8085   --name docker-build  -i docker-in-jenkins-build:latest"
                      sh "docker exec -t docker-build  mongoimport --uri 'mongodb://appAdmin:secret@mongodb:27017/myNewDatabase'   -c restaurant --file  /tmp/restaurant.json"
                      sh 'echo prepare appPython'
                      sh 'docker build -t "docker-app:latest"  /var/jenkins_home/workspace/the-real-devops-challenge/appPython'
                    }
		}
        stage('Test') {
            steps {
		      //sh './jenkins/test/test.sh mvn test' 
                   sh "echo Testing the App"
                   sh "docker run  -v /home/ubuntu/jenkins/the-real-devops-challenge:/tmp/app -w /tmp/app --rm painless/tox /bin/bash tox"
                  }
		}
		
        stage('Deploy') {
            steps {
       		   //sh './jenkins/deploy/deploy.sh'
                   sh "echo hola deploy"
                   sh "./start.sh &"
   
            }
         }
    }
}

